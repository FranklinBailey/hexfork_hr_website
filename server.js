// Import necessary modules
const express = require("express");
const mongoose = require("mongoose");
const bodyParser = require("body-parser");
const path = require("path");
const cors = require("cors");

const app = express();
const port = 5000;

// Middleware
app.use(cors())
app.use(bodyParser.json());

// Connect to MongoDB
mongoose.connect("mongodb://127.0.0.1:27017/HumanResourceDatabase", {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

// Create a Mongoose schema for EmployeeCredentials
const EmployeeCredentialsSchema = new mongoose.Schema({
  email: String,
  password: String,
});

// Create a Mongoose model
const EmployeeCredentials = mongoose.model(
    "EmployeeCredentials",
    EmployeeCredentialsSchema,
    "EmployeeCredentials" // Specify the collection name
  );

// API endpoint to handle form submissions
app.post("/api/createAccount", async (req, res) => {
  try {
    const { email, password } = req.body;

    // Log the calues to check if thery are being captured correctly
    console.log("Email: ", email);
    console.log("Password: ", password);

    // Create a new document in the EmployeeCredentials collection
    const newEmployee = new EmployeeCredentials({ email, password });
    await newEmployee.save();

    res.status(200).json({ success: true, message: "Account created successfully" });
  } catch (error) {
    console.error("Error creating account:", error);
    res.status(500).json({ success: false, error: "Internal Server Error" });
  }
});

// Serve static files for a React app (if applicable)
// This assumes you have a build folder generated by `npm run build`
app.use(express.static("build"));

// Define a catch-all route for React app (if applicable)
// This should come after all other routes
// This is to serve the Frontend to the Backend
// app.get("*", (req, res) => {
//     res.sendFile(path.resolve(__dirname, "../build", "index.html"));
// });

// Start the server
app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
